
# Notice this file is similar to the one we created for the backend microservice. There are two differences:

# We're specifying a different container to run under the deployment's spec.template.spec.containers.image value.
# There's a new environment variable under the spec.template.spec.containers.env section. 
# The code in the storefrontend application calls the backend, 
# but because we didn't specify a fully qualified domain name (FQDN), 
# we don't know the IP address of the backend microservice, 
# we use the name we specified under the metadata.name node of the Deployment. 
# Kubernetes takes care of the rest.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storefrontend
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: storefrontend
    spec:
      containers:
      - name: storefrontend
        image: t2mil/storeimage:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_URLS
          value: http://*:80
        - name: ProductEndpoint
          value: http://productsbackend
  selector:
    matchLabels:
      app: storefrontend
---
apiVersion: v1
kind: Service
metadata:
  name: storefrontend
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 32000
  selector:
    app: storefrontend
